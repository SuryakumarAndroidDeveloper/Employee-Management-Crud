@model IEnumerable<MyCaRt.Models.CustomerInterestedCategory>

@{
    ViewData["Title"] = "ListOfCustomers";
}

<style>
    .action-links,
    .action-links-form {
        display: inline-block;
        margin-right: 5px;
        text-decoration: none;
        color: #fff;
        padding: 6px 12px;
        border-radius: 4px;
    }

        .action-links.edit {
            background-color: #007bff;
        }

        .action-links.delete {
            background-color: #dc3545;
        }

        .action-links.orders {
            background-color: #17a2b8;
        }

        .action-links.wishlist {
            background-color: #28a745;
        }
        .export{
        position: absolute;
        right: 280px;
        margin: 10px;
        }

        .export:hover{
            background-color:green;
        }

          .exportpdf {
          position: absolute;
          right: 180px;
        margin: 10px;
    }

        .exportpdf:hover {
            background-color:darkred;
        }
</style>

<div class="containerindex">
<h1>ListOfCustomers</h1>

<p>
    <a asp-controller="Customer" asp-action="Customer">Create New</a>
</p>
    <form asp-action="ExportToPdf" method="post">
        <button type="submit" class="exportpdf">Export Pdf</button>
    </form>
    <form asp-action="ExportToExcel" method="post">
        <button type="submit" class="export">Export Excel</button>
    </form><br /><br />
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Customer_Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer_FName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer_LName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer_Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer_InterestedCategory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer_Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer_Mobile)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Customer_Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer_FName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer_LName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer_Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer_InterestedCategory)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer_Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer_Mobile)
            </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Customer_Id }, new { @class = "action-links edit" })
                        <form class="action-links-form" asp-action="Deactivate" method="post" style="display: inline-block;">
                        <input type="hidden" name="id" value="@item.Customer_Id" />
                        <button type="submit" class="action-links delete" onclick="return confirm('Are you sure you want to delete this customer?')">Delete</button>
                    </form>
                    @Html.ActionLink("MyOrders", "MyOrders", new { Customer_Id = item.Customer_Id }, new { @class = "action-links orders" })
                    @Html.ActionLink("MyWishList", "MyWishList", new { Customer_Id = item.Customer_Id }, new { @class = "action-links wishlist" })
                </td>
        </tr>
}
    </tbody>
</table>
</div>