

    <button type="button" id="addField" class="btn btn-primary">Add New Product</button>
    

//add new product with differentcategoryname
        document.getElementById('addField').addEventListener('click', function () {
           var productFields = document.getElementById('productFields');
           var fieldCount = productFields.children.length;
           var newField = productFields.children[0].cloneNode(true);

           newField.querySelectorAll('input,select').forEach(function (input) {
                var name = input.getAttribute('name').replace('[0]', '[' + fieldCount + ']');
                input.setAttribute('name', name);
                    input.value = '';
                   
            });    
           productFields.appendChild(newField);                        
        });

        //New feature same categoryname but differentproduct
            $('#addSameCategoryProduct').click(function () {
                var productFields = $('#productFields');
                var fieldCount = productFields.children().length;
                var lastProductField = productFields.children().last();
                var selectedCategory = lastProductField.find('select').val();
                if (!selectedCategory) {
                    alert("Please choose the category first.");
                    return;
                }


                var newField = lastProductField.clone();
              
                newField.find('input, select').each(function () {
                    var input = $(this);
                    var name = input.attr('name').replace(/\[\d+\]/, '[' + fieldCount + ']');
                   

                    if (input.is('select')) {
                        input.val(selectedCategory);  
                        input.prop('hidden', true);
                        
                        input.closest('.form-group.row').find('label[for$="Product_Category"]').hide();
                        

                    } else {
                        input.val('');
                    }
                    input.attr('name', name);
                    
                });
               
                productFields.append(newField);
            });



            //change for all the fields
            $(".productcategory").on("change", function () {

                let value = $(".productcategory").val();

                $(".productcategory").val(value);
            })

            //////full code

            @model List<MyCaRt.Models.ProductModel>

@{
    ViewData["Title"] = "Create Product";
}
@if(TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessageCount"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessageCount"]
    </div>
}
<style>
    .my-form .form-group .row {
        margin-bottom: 10px;
    }

        .my-form .form-group .row .col-md-3,
        .my-form .form-group .row .col-md-6 {
            display: inline-block;
            width: calc(100% / 7 - 10px);
            margin-right: 0px;
        }

            .my-form .form-group .row .col-md-3:last-child,
            .my-form .form-group .row .col-md-6:last-child {
                margin-right: 0;
            }

    .my-form .form-control {
        width: 100%;
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    .my-form .form-control-file {
        width: auto;
    }

    .form-control-sm {
        padding: 0.25rem 0.2rem;
        font-size: 0.75rem;
    }
</style>
<hr/>

<h2>Create Product</h2>
<div class="container">
    <form asp-action="CreateProduct" method="post" enctype="multipart/form-data" id="productForm">
    <div id="productFields">
   
            <div class="product-field">
                <div class="form-group row">
                <div class="col-md-3">                 
                     <label asp-for="@Model[0].Product_Category" id="Product_Category" class="control-label">Choose Category</label>
                     <select asp-for="@Model[0].Product_Category" name="[0].Product_Category" class="form-control form-control-sm custom-select productcategory" asp-items="@ViewBag.CategoryData">
                     <option id="productcategory" value="">Select Product Category</option>
                       </select>
                        <span asp-validation-for="@Model[0].Product_Category" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                            <label asp-for="@Model[0].Product_Code" class="control-label">Product Code</label>
                            <input asp-for="@Model[0].Product_Code" class="form-control form-control-sm" />
                    <span asp-validation-for="@Model[0].Product_Code" class="text-danger"></span>
                    <span id="productCodeError"  class="text-danger"></span>

                </div>
                <div class="col-md-3">
                            <label asp-for="@Model[0].Product_Name" class="control-label">Product Name</label>
                            <input asp-for="@Model[0].Product_Name" class="form-control form-control-sm" />
                    <span asp-validation-for="@Model[0].Product_Name" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                            <label asp-for="@Model[0].Product_Price" class="control-label">Product Price</label>
                            <input type="decimal" asp-for="@Model[0].Product_Price" class="form-control form-control-sm" />
                    <span asp-validation-for="@Model[0].Product_Price" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                            <label asp-for="@Model[0].Product_Description" class="control-label">Description</label>
                            <input asp-for="@Model[0].Product_Description" class="form-control form-control-sm" />
                    <span asp-validation-for="@Model[0].Product_Description" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                            <label asp-for="@Model[0].Available_Quantity" class="control-label">Available Quantity</label>
                            <input type="number" asp-for="@Model[0].Available_Quantity" class="form-control form-control-sm" />
                    <span asp-validation-for="@Model[0].Available_Quantity" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                            <label asp-for="@Model[0].ImageName" class="control-label">Select Image</label>
                            <input type="file" name="ImageName" class="form-control form-control-sm" />
                 
                    <span id="filepathError" class="text-danger"></span>

                </div>
                </div>
                <button type="button" class="btn btn-danger remove-field">Remove</button>
            </div>
        
    </div>
        <button type="button" id="addSameCategoryProduct" class="btn btn-primary">Add Same Category Product</button>
    <button type="submit" class="btn btn-success">Submit</button>
</form>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

// Change category value for all fields
            $(".productcategory").on("change", function () {
                let value = $(".productcategory").val();
                $("input[name$='Product_Category']").val(value);
            });
//to display the error message in the field
            var errorMessage = '@TempData["ErrorMessage"]';
            if (errorMessage && errorMessage.includes("Product code already exists.")) {
                $("#productCodeError").text(errorMessage).show();
            }
            if (errorMessage && errorMessage.includes("Select the Image.")) {
                $("#filepathError").text(errorMessage).show();
            }



//New feature same categoryname but differentproduct
            $('#addSameCategoryProduct').click(function () {
                var productFields = $('#productFields');
                var newIndex = productFields.children().length; 
                var selectedCategory = productFields.find('select.productcategory').val();

                if (!selectedCategory) {
                    alert("Please choose the category first.");
                    return;
                }

                // Create new field dynamically
                var newField = `
                    <div class="product-field">
                        <div class="form-group row">
                            <div class="col-md-3">
                                        <input name="[${newIndex}].Product_Category" id=[${newIndex}].Product_Category" type="hidden" value="${selectedCategory}" />
                            </div>
                            <div class="col-md-3">
                                <label class="control-label">Product Code</label>
                                        <input class="form-control form-control-sm" id="[${newIndex}].Product_Code" name="[${newIndex}].Product_Code" />
                                <span asp-validation-for="[${newIndex}].Product_Code" class="text-danger"></span>
                                <span class="text-danger product-code-error" id="productCodeError${newIndex}"></span>
                            </div>
                            <div class="col-md-3">
                                <label class="control-label">Product Name</label>
                                <input class="form-control form-control-sm" name="[${newIndex}].Product_Name" />
                                <span class="text-danger" id="productNameError${newIndex}"></span>
                            </div>
                            <div class="col-md-3">
                                <label class="control-label">Product Price</label>
                                <input type="number" class="form-control form-control-sm" name="[${newIndex}].Product_Price" />
                                <span class="text-danger" id="productPriceError${newIndex}"></span>
                            </div>
                            <div class="col-md-3">
                                <label class="control-label">Description</label>
                                <input class="form-control form-control-sm" name="[${newIndex}].Product_Description" />
                                <span class="text-danger" id="productDescriptionError${newIndex}"></span>
                            </div>
                            <div class="col-md-3">
                                <label class="control-label">Available Quantity</label>
                                <input type="number" class="form-control form-control-sm" name="[${newIndex}].Available_Quantity" />
                                <span class="text-danger" id="availableQuantityError${newIndex}"></span>
                            </div>
                            <div class="col-md-3">
                                <label class="control-label">Select Image</label>
                                 <input type="file" class="form-control form-control-sm" name="ImageName" />
                                <span id="filepathError" class="text-danger"></span>  
                            </div>
                        </div>
                        <button type="button" class="btn btn-danger remove-field">Remove</button>
                    </div>`;

                productFields.append(newField);


            });
       
//remove the product details field
        document.getElementById('productFields').addEventListener('click', function (e) {
            if (e.target && e.target.matches('button.remove-field')) {
                if (document.getElementsByClassName('product-field').length > 1) {
                    e.target.closest('.product-field').remove();
                } else {
                    alert("At least one product details is required.");
                }
                 
            }
        });

// Validate form before submitting
            $('#productForm').submit(function (event) {
                var isValid = true;
                $('#productFields .product-field').each(function (index, field) {
                    var $field = $(field);
                    $field.find('input, select').each(function () {
                        var $input = $(this);
                        if (!$input.val()) {
                            isValid = false;
                            $input.next('.text-danger').text('This field is required.').show();
                        } else {
                            $input.next('.text-danger').hide();
                        }
                    });
                });

                if (!isValid) {
                    event.preventDefault();
                }
            });

        });
    </script>
}



